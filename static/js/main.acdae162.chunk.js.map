{"version":3,"sources":["../node_modules/n3/lib sync /^/.//N3.*$","config.js","Reducers/MainReducer.js","serviceWorker.js","Api/Item.js","Api/folderUtils.js","Api/Api.js","Api/ApiHandler.js","Api/ApiCache.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/CreateFileAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLoginAction.jsx","Components/ContextMenu/ContextMenuActions/SolidLogoutAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/ZipAction.jsx","Components/ContextMenu/ContextMenuActions/ExtractAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenuActions/OpenInNewTabAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/SolidLogin/SolidLogin.jsx","Components/Dialogs/SolidLogout/SolidLogout.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Media/Media.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/CreateFile/CreateFile.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["map","./N3Lexer","./N3Lexer.js","./N3Parser","./N3Parser.js","./N3Store","./N3Store.js","./N3StreamParser","./N3StreamParser.js","./N3StreamWriter","./N3StreamWriter.js","./N3Util","./N3Util.js","./N3Writer","./N3Writer.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","host","config","getHost","setHost","newHost","slice","isEditableFilePattern","isImageFilePattern","isMediaFilePattern","isVideoFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","defaultState","path","pathSublist","isLoggedIn","webId","itemList","itemListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedItems","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogSolidLogin","visibleDialogSolidLogout","visibleDialogCreateFolder","visibleDialogCreateFile","visibleDialogUploadFile","visibleDialogContent","visibleDialogMedia","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","arguments","length","undefined","action","type","assign","value","concat","toConsumableArray","sort","a","b","name","toLowerCase","filter","f","i","self","ff","indexOf","selectedFiles","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","Item","url","size","classCallCheck","this","constructor","getPathFromUrl","_name","pop","_path","_url","_size","createClass","key","item","every","val","index","decodeURI","getHumanFileSize","get","FileItem","_Item","possibleConstructorReturn","getPrototypeOf","apply","inherits","patterns","image","test","media","editable","extractable","video","FolderItem","_Item2","bytes","Math","pow","toFixed","pathname","split","getFolderItems","graph","subj","files","folders","each","rdflib","forEach","subjectName","subjectNode","nsSize","any","getSizeByGraph","folderNode","isAnInstanceOfClass","types","isFolder","push","text2graph","_x","_x2","_x3","_text2graph","_callee","text","contentType","regenerator_default","wrap","_context","prev","next","abrupt","Promise","reject","guessFileType","err","stop","ext","replace","fetchFile","_fetchFile","fileName","_args","buildFileUrl","solidAuth","assertSuccessfulResponse","fetchFolder","_fetchFolder","_callee2","folderName","_args2","_context2","buildFolderUrl","headers","Accept","readFolder","_readFolder","_callee3","response","folderRDF","folderItems","_args3","_context3","sent","folderUtils","_callee4","destination","itemNames","_context4","copyItems","removeItems","_callee5","oldName","newName","_context5","copyFile","removeItem","_callee6","oldFolderName","newFolderName","_context6","copyFolder","removeFolderRecursively","_x13","_x14","_x15","_copyItems","_callee7","_ref","promises","_context7","_ref2","includes","_ref3","_ref4","_ref5","all","Response","_x16","_x17","_x18","_x19","_copyFile","_callee8","originPath","originName","destinationPath","destinationName","destinationUrl","fileResponse","content","_context8","t0","blob","method","body","_x20","_x21","_x22","_x23","_copyFolder","_callee9","_ref6","_context9","createFolder","_ref7","_ref8","_callee10","fileList","_context10","Array","from","file","updateItem","_x26","_x27","_createFolder","_callee11","_context11","folderExists","createItem","_x28","_x29","_x30","_x31","_updateItem","_callee12","itemName","_context12","_callee13","baseUrl","request","_context13","link","slug","Content-Type","_x36","_x37","_removeItems","_callee14","_context14","_x38","_x39","_removeItem","_callee15","_context15","status","_x40","_x41","_removeFolderRecursively","_callee16","_context16","removeFolderContents","_x42","_x43","_removeFolderContents","_callee17","folderPath","_ref9","_context17","_ref10","_ref11","_x44","_x45","_folderExists","_callee18","_context18","ok","cache","ApiCache","_data","hasOwnProperty","handleFetchError","asyncToGenerator","mark","detailedErrorMessage","displayErrorMessage","displayMessages","group","401","403","404","500","message","stack","JSON","stringify","groupEnd","fixPath","getItemList","contains","API","add","getFileBlob","filename","renameFile","newFileName","_x7","_x8","_x9","_renameFile","renameFolder","_x10","_x11","_x12","_renameFolder","folder","trim","moveItems","filenames","_x4","_x5","_x6","_moveItems","uploadFiles","_x24","_x25","_upload","updateFile","getAsZip","zip","JSZip","addItemsToZip","zipFolder","binary","extractZipArchive","uploadExtractedZipArchive","curFolder","_args5","getItemsInZipFolder","relativePath","getItemNameFromPath","getParentPathFromPath","dir","async","endsWith","substr","lastIndexOf","history","updateBrowserHistory","dispatch","getState","_getState","join","encodeURI","getLocationObjectFromUrl","origin","solidLogin","setLoading","solidPopupLogin","setWebId","setIsLoggedIn","r","toString","session","popupUri","solidLogout","setPath","setPathSublist","setItemList","setSelectedItems","clear","setVisibleDialogSolidLogout","setVisibleDialogSolidLogin","displayCurrentItemList","APIHandler","items","refreshItemList","updateItemListSublist","setLoadingSublist","setSelectedFolderSublist","setItemListSublist","promptDownload","msSaveOrOpenBlob","document","createElement","href","download","appendChild","click","setTimeout","removeChild","getFileContent","setFileContent","loadAndEditFile","setVisibleDialogEdit","loadAndDisplayFile","setVisibleDialogContent","displaySelectedMediaFile","setVisibleDialogMedia","_getState17","setVisibleDialogCopy","setSelectedFileFromLastTo","lastFile","_getState18","lastPreviouslySelected","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","element","initSubList","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterFolder","enterFolderWithoutUpdatingHistory","enterFolderByItem","setFileListFilter","enterToPreviousDirectorySublist","search","setContextMenuVisible","visible","setVisibleDialogCreateFolder","setVisibleDialogCreateFile","setVisibleDialogRename","setVisibleDialogMove","percentage","File","_this$props","props","isSelected","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","getDisplaySize","react_default","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem_default","ListItemAvatar_default","Avatar_default","style","InsertDriveFile_default","Folder_default","ListItemText_default","primary","getDisplayName","secondary","Component","connect","ownProps","some","equals","event","isEditable","isImage","isMedia","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid_default","container","justify","CircularProgress_default","color","FileList","itemComponents","Components_File_File","Loader_Loader","Components_FileList_FileListEmptyMessage","filterMatch","first","second","toLocaleLowerCase","filterVal","callback","handleClose","MenuItem_default","ListItemIcon_default","CreateNewFolder_default","Typography_default","variant","CloudUpload_default","PermIdentity_default","Clear_default","ThreeDotsMenu","anchorEl","_this","setState","currentTarget","marginLeft","IconButton_default","aria-label","aria-owns","aria-haspopup","MoreVert_default","Menu_default","open","onClose","ContextMenuActions_CreateFolderAction","ContextMenuActions_CreateFileAction","ContextMenuActions_UploadFileAction","ContextMenuActions_SolidLogoutAction","ContextMenuActions_SolidLoginAction","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","Button_default","display","KeyboardArrowLeft_default","paths","defineProperty","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","handleChange","enterToPreviousDirectoryByIndex","handleRefresh","AppBar_default","Toolbar_default","noWrap","Components_Breadcrumb_BreadcrumbText","Search_default","InputBase_default","placeholder","onChange","input","Refresh_default","Navbar_ThreeDotsMenu","OpenInBrowser_default","Delete_default","HowToVote_default","FileCopy_default","WrapText_default","archiveName","generateAsync","Archive_default","Unarchive_default","_getState10","downloadName","CloudDownload_default","Link_default","ContextMenu","acts","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","ContextMenuActions_OpenAction","ContextMenuActions_OpenInNewTabAction","ContextMenuActions_DownloadAction","ContextMenuActions_ZipAction","ContextMenuActions_ExtractAction","EditAction","ContextMenuActions_CopyAction","ContextMenuActions_MoveAction","RenameAction","ContextMenuActions_RemoveAction","getActionsForMultipleItems","getActionsForItem","getActionsForFile","getActionsForFolder","isExtractable","FormDialog","encodedUrl","URLSearchParams","form","querySelector","handleSubmit","handleLogin","Dialog_default","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","label","bind","DialogActions_default","disabled","_getLocationObjectFro","handleLogout","lastBlobUrl","blobUrl","src","alt","handleOpen","provider","react_plyr_lib_default","iconUrl","isVideo","_this2","fetch","t","handleSave","textArea","minHeight","defaultValue","DialogContentText_default","updateTextFile","createFolderName","handleCreate","createFile","FileSublist","directory","FileListSublist","File_FileSublist_FileSublist","selectedItem","selectedPath","canMove","FileList_FileListSublist_FileListSublist","_getState16","canCopy","UploadFileList","list","dense","List_default","component","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","FileUploader_UploadFileList","handleUpload","canUpload","Components_FileUploader_FileUploader","LinearProgress_default","target","Dialogs","SolidLogin","SolidLogout","Content","Media","Edit","CreateFolder","CreateFile","Move","Copy","Rename","UploadFile","DynamicSnackbar","notificationDuration","Snackbar_default","anchorOrigin","autoHideDuration","ContentProps","aria-describedby","close","Close_default","padding","createMuiTheme","typography","useNextVariants","App","init","core_styles","handleHideContextMenu","Navbar","Components_FileList_FileList","Components_ContextMenu_ContextMenu","Notification_DynamicSnackbar","Dialogs_Dialogs","createBrowserHistory","listen","_location$state","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","getElementById","process","addEventListener","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.acdae162.chunk.js","sourcesContent":["var map = {\n\t\"./N3Lexer\": 113,\n\t\"./N3Lexer.js\": 113,\n\t\"./N3Parser\": 114,\n\t\"./N3Parser.js\": 114,\n\t\"./N3Store\": 152,\n\t\"./N3Store.js\": 152,\n\t\"./N3StreamParser\": 153,\n\t\"./N3StreamParser.js\": 153,\n\t\"./N3StreamWriter\": 161,\n\t\"./N3StreamWriter.js\": 161,\n\t\"./N3Util\": 115,\n\t\"./N3Util.js\": 115,\n\t\"./N3Writer\": 120,\n\t\"./N3Writer.js\": 120\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 268;","let host = null;\n\nexport default {\n    getHost() {\n        return host;\n    },\n    setHost(newHost) {\n        host = newHost;\n        while (host.slice(-1) === '/')\n            host = host.slice(0, -1);\n    },\n\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    isMediaFilePattern: /\\.(mp3|ogg|wav|mp4|webm)$/i,\n    isVideoFilePattern: /\\.(mp4|webm|ogg)$/i,\n    isExtractableFilePattern: /\\.(zip)$/i,\n\n    actions: {\n        create_folder: true,\n        move: true,\n        copy: true,\n        copy_folder: true,\n        compress: true,\n        extract: true,\n        edit: true,\n        remove: true,\n        upload: true,\n        upload_by_chunks: true,\n        preview_images: true,\n    }\n};\n","import config from '../config.js';\n\nexport const defaultState = {\n    path: [],\n    pathSublist: [],\n    host: null,\n    isLoggedIn: false,\n    webId: null,\n    itemList: [],\n    itemListSublist: [],\n    fileListFilter: null,\n    contextMenuVisible: null,\n    contextMenuPosition: [],\n    contextMenuPositionElement: null,\n    selectedItems: [],\n    selectedFolderSublist: null,\n    loading: false,\n    loadingSublist: false,\n    errorMsg: null,\n    visibleDialogSolidLogin: false,\n    visibleDialogSolidLogout: false,\n    visibleDialogCreateFolder: false,\n    visibleDialogCreateFile: false,\n    visibleDialogUploadFile: false,\n    visibleDialogContent: false,\n    visibleDialogMedia: false,\n    visibleDialogEdit: false,\n    visibleDialogMove: false,\n    visibleDialogCopy: false,\n    visibleDialogRename: false,\n    fileContentBlobUrl: null,\n    fileUploadProgress: 0,\n    fileUploadList: []\n};\n\n/**\n * Main content reducer\n * @param {Object} state\n * @param {Object} action\n * @returns {Object}\n */\nconst MainReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'SET_PATH':\n            return Object.assign({}, state, {\n                path: action.value\n            });\n        case 'SET_PATH_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: action.value\n            });\n        case 'SET_HOST':\n            config.setHost(action.value);\n            return Object.assign({}, state, {\n                host: action.value\n            });\n        case 'SET_IS_LOGGED_IN':\n            return Object.assign({}, state, {\n                isLoggedIn: action.value\n            });\n        case 'SET_WEB_ID':\n            return Object.assign({}, state, {\n                webId: action.value\n            });\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\n            return Object.assign({}, state, {\n                pathSublist: [...state.pathSublist, action.value]\n            });\n        case 'SET_ITEM_LIST':\n            return Object.assign({}, state, {\n                itemList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_ITEM_LIST_SUB_LIST':\n            return Object.assign({}, state, {\n                itemListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\n            });\n        case 'SET_FILE_LIST_FILTER':\n            return Object.assign({}, state, {\n                fileListFilter: action.value\n            });\n        case 'SET_CONTEXT_MENU_VISIBLE':\n            return Object.assign({}, state, {\n                contextMenuVisible: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION':\n            return Object.assign({}, state, {\n                contextMenuPosition: action.value\n            });\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\n            return Object.assign({}, state, {\n                contextMenuPositionElement: action.value\n            });\n        case 'SET_SELECTED_ITEMS':\n            return Object.assign({}, state, {\n                selectedItems: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\n            });\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\n            return Object.assign({}, state, {\n                selectedFolderSublist: action.value\n            });\n\n        case 'TOGGLE_SELECTED_FILE':\n            return Object.assign({}, state, {\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\n                    [...state.selectedFiles, action.value]\n            });\n        case 'SET_FILE_UPLOAD_PROGRESS':\n            return Object.assign({}, state, {\n                fileUploadProgress: parseInt(action.value || 0)\n            });\n        case 'SET_LOADING':\n            return Object.assign({}, state, {\n                loading: action.value\n            });\n        case 'SET_LOADING_SUB_LIST':\n            return Object.assign({}, state, {\n                loadingSublist: action.value\n            });\n        case 'SET_ERROR_MSG':\n            return Object.assign({}, state, {\n                errorMsg: action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGIN':\n            return Object.assign({}, state, {\n                visibleDialogSolidLogin: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_SOLID_LOGOUT':\n            return Object.assign({}, state, {\n                visibleDialogSolidLogout: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\n            return Object.assign({}, state, {\n                visibleDialogCreateFolder: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CREATE_FILE':\n            return Object.assign({}, state, {\n                visibleDialogCreateFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\n            return Object.assign({}, state, {\n                visibleDialogUploadFile: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_CONTENT':\n            return Object.assign({}, state, {\n                visibleDialogContent: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MEDIA':\n            return Object.assign({}, state, {\n                visibleDialogMedia: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_EDIT':\n            return Object.assign({}, state, {\n                visibleDialogEdit: !!action.value\n            });\n\n        case 'SET_VISIBLE_DIALOG_MOVE':\n            return Object.assign({}, state, {\n                visibleDialogMove: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_COPY':\n            return Object.assign({}, state, {\n                visibleDialogCopy: !!action.value\n            });\n        case 'SET_VISIBLE_DIALOG_RENAME':\n            return Object.assign({}, state, {\n                visibleDialogRename: !!action.value\n            });\n        case 'SET_FILE_UPLOAD_LIST':\n            return Object.assign({}, state, {\n                fileUploadList: action.value\n            });\n\n        case 'SET_FILE_CONTENT':\n            /**\n             * Removing old blob url\n             */\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\n            return Object.assign({}, state, {\n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\n            });\n\n        default:\n            return state;\n    }\n};\n\nexport default MainReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Class for an arbitrary item from a solid pod\n */\nexport class Item {\n    /**\n     * @param {String} url\n     * @param {Number} size\n     */\n    constructor(url, size) {\n        if (new.target === Item)\n            throw new Error(\"Class Item should not directly be used\");\n\n        const path = getPathFromUrl(url);\n\n        this._name = path.pop();\n        this._path = path;\n        this._url = url;\n        this._size = size;\n    }\n\n    // Make properties readonly\n    get name() { return this._name; }\n    get path() { return this._path; }\n    get url() { return this._url; }\n    get size() { return this._size; }\n\n    equals(item) {\n        return this.name === item.name\n            && this.path.length === item.path.length\n            && this.path.every((val, index) => val === item.path[index]);\n    }\n\n    getDisplayName() {\n        return decodeURI(this.name);\n    }\n\n    getDisplaySize() {\n        return getHumanFileSize(this.size);\n    }\n}\n\nexport class FileItem extends Item {\n    isImage() {\n        return patterns.image.test(this.name);\n    }\n\n    isMedia() {\n        return patterns.media.test(this.name);\n    }\n\n    isEditable() {\n        return patterns.editable.test(this.name);\n    }\n\n    isExtractable() {\n        return patterns.extractable.test(this.name);\n    }\n\n    isVideo() {\n        return patterns.video.test(this.name);\n    }\n}\n\nexport class FolderItem extends Item { }\n\n\n// regex patterns for testing if a file is of a specific type\nconst patterns = {\n    editable: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst|ttl)$/i,\n    image: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\n    media: /\\.(mp3|ogg|wav|mp4|webm)$/i,\n    video: /\\.(mp4|webm|ogg)$/i,\n    extractable: /\\.(zip)$/i\n};\n\n/**\n * Calculate file size by bytes in human readable format\n * @param {Number} bytes\n * @returns {String}\n */\nexport const getHumanFileSize = (bytes) => {\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\n};\n\n\n/**\n * @param {String} url\n * @returns {Array<String>} path - containing the path including the last element (e.g. [public, test, index.html])\n */\nconst getPathFromUrl = url => {\n    url = new URL(url);\n    return url.pathname.split('/').filter(val => val !== '');\n}","// Based on https://github.com/jeff-zucker/solid-file-client/blob/master/src/folderUtils.js\nimport * as rdflib from 'rdflib';\nimport { FileItem, FolderItem } from './Item.js';\n\n/*\nexport function getStats(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const mod = rdflib.sym('http://purl.org/dc/terms/modified');\n    const size = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    // const mtime = rdflib.sym('http://www.w3.org/ns/posix/stat#mtime');\n    let modified = graph.any(subjectNode, mod, undefined);\n    if (typeof (modified) === \"undefined\") return false;\n    else modified = modified.value;\n    return {\n        modified: modified,\n        size: graph.any(subjectNode, size, undefined).value,\n        // mtime: graph.any(subjectNode, mtime, undefined).value,\n    };\n}\n*/\n\nexport function getSizeByGraph(graph, subjectName) {\n    const subjectNode = rdflib.sym(subjectName);\n    const nsSize = rdflib.sym('http://www.w3.org/ns/posix/stat#size');\n    const size = graph.any(subjectNode, nsSize, undefined);\n\n    return (size && 'value' in size) ? size.value : undefined;\n}\n\n/** A type used internally to indicate we are handling a folder */\n/**\n * @param {rdflib.IndexedFormula} graph a rdflib.graph() database instance\n * @param {string} url location of the folder\n * @returns {string} content mime-type of a file, If it's a folder, return 'folder', 'unknown' for not sure\n */\nexport function isFolder(graph, url) {\n    const folderNode = rdflib.sym(url);\n    const isAnInstanceOfClass = rdflib.sym('http://www.w3.org/1999/02/22-rdf-syntax-ns#type');\n    const types = graph.each(folderNode, isAnInstanceOfClass, undefined);\n    for (const index in types) {\n        const contentType = types[index].value;\n        if (contentType.match('ldp#BasicContainer'))\n            return true;\n        else\n            return false;\n    }\n    console.error('unknown item type', graph, url);\n    return false;\n}\n\nexport function getFolderItems(graph, subj) {\n    const files = [];\n    const folders = [];\n    graph.each(\n        rdflib.sym(subj),\n        rdflib.sym('http://www.w3.org/ns/ldp#contains'),\n        undefined\n    ).forEach(item => {\n        const url = item.value;\n        const size = getSizeByGraph(graph, url);\n\n        if (isFolder(graph, url))\n            folders.push(new FolderItem(url, size));\n        else\n            files.push(new FileItem(url, size));\n    });\n\n    return { files, folders };\n}\n\n/**\n * @param {string} text RDF text that can be passed to $rdf.parse()\n * @param {*} content the request body\n * @param {string} contentType Content-Type of the request\n * @returns {$rdf.IndexedFormula} a $rdf.graph() database instance with parsed RDF\n */\nexport async function text2graph(text, url, contentType) {\n    return new Promise((resolve, reject) => {\n        contentType = contentType || guessFileType(url)\n        var graph = rdflib.graph();\n        try {\n            rdflib.parse(text, graph, url, contentType);\n            resolve(graph);\n        } catch (err) {\n            reject(err)\n        }\n    })\n}\n\n/*cjs*/ function guessFileType(url) {\n    const ext = url.replace(/.*\\./, '');\n    if (ext.match(/\\/$/)) return 'dir';\n    if (ext.match(/(md|markdown)/)) return 'text/markdown';\n    if (ext.match(/html/)) return 'text/html';\n    if (ext.match(/xml/)) return 'text/xml';\n    if (ext.match(/ttl/)) return 'text/turtle';\n    if (ext.match(/n3/)) return 'text/n3';\n    if (ext.match(/rq/)) return 'application/sparql';\n    if (ext.match(/css/)) return 'text/css';\n    if (ext.match(/txt/)) return 'text/plain';\n    if (ext.match(/json/)) return 'application/json';\n    if (ext.match(/js/)) return 'application/javascript';\n    if (ext.match(/(png|gif|jpeg|tif)/)) return 'image';\n    if (ext.match(/(mp3|aif|ogg)/)) return 'audio';\n    if (ext.match(/(avi|mp4|mpeg)/)) return 'video';\n    /* default */ return 'text/turtle';\n}\n","import config from './../config.js';\nimport * as folderUtils from './folderUtils.js';\nimport * as solidAuth from 'solid-auth-client';\n\n/**\n * @typedef {Object} FolderItems\n * @property {Array<{Object}>} files\n * @property {Array<{Object}>} folders\n */\n\n\n/**\n * Fetch API to get item\n * @param {String} path\n * @param {String} fileName\n * @returns {Response}\n */\nexport async function fetchFile(path, fileName = '') {\n    const url = buildFileUrl(path, fileName);\n    return solidAuth.fetch(url)\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to get folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function fetchFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n    return solidAuth.fetch(url, { headers: { \"Accept\": \"text/turtle\" } })\n        .then(assertSuccessfulResponse);\n};\n\n\n/**\n * Fetch API to retrieve object containing a files and folders array\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<FolderItems>}\n */\nexport async function readFolder(path, folderName = '') {\n    const url = buildFolderUrl(path, folderName);\n\n    const response = await fetchFolder(path, folderName);\n    const folderRDF = await response.text();\n    const graph = await folderUtils.text2graph(folderRDF, url, 'text/turtle');\n    const folderItems = folderUtils.getFolderItems(graph, url);\n\n    return folderItems;\n}\n\n\n/**\n * Fetch API to move items\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} itemNames\n * @returns {Response}\n */\nexport async function moveItems(path, destination, itemNames) {\n    await copyItems(path, destination, itemNames);\n    return removeItems(path, itemNames);\n};\n\n\n/**\n * Fetch API to rename a file\n * @param {String} path\n * @param {String} oldName\n * @param {String} newName\n * @returns {Response}\n */\nexport async function renameFile(path, oldName, newName) {\n    await copyFile(path, oldName, path, newName);\n    return removeItem(path, oldName);\n};\n\n\n/**\n * Fetch API to rename a folder\n * @param {String} path\n * @param {String} oldFolderName\n * @param {String} newFolderName\n * @returns {Response}\n */\nexport async function renameFolder(path, oldFolderName, newFolderName) {\n    await copyFolder(path, oldFolderName, path, newFolderName);\n    return removeFolderRecursively(path, oldFolderName);\n};\n\n\n/**\n * Fetch API to copy files\n * @param {String} path\n * @param {String} destination\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function copyItems(path, destination, itemNames) {\n    let { files, folders } = await readFolder(path);\n\n    files = files.filter(({ name }) => itemNames.includes(name));\n    folders = folders.filter(({ name }) => itemNames.includes(name));\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(path, name, destination, name)),\n        ...folders.map(({ name }) => copyFolder(path, name, destination, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to copy a file\n * @param {String} originPath\n * @param {String} originName\n * @param {String} destinationPath\n * @param {String} destinationName\n * @returns {Response}\n */\nexport async function copyFile(originPath, originName, destinationPath, destinationName) {\n    const destinationUrl = buildFileUrl(destinationPath, destinationName);\n\n    const fileResponse = await fetchFile(originPath, originName);\n    const content = (fileResponse.headers.get('Content-Type') === 'application/json') ?\n        await fileResponse.text()\n        : await fileResponse.blob();\n\n    return solidAuth.fetch(destinationUrl, {\n        method: 'PUT',\n        body: content\n    }).then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to copy a folder recursively\n * @param {String} originPath \n * @param {String} originName \n * @param {String} destinationPath \n * @param {String} destinationName \n * @return {Response}\n */\nexport async function copyFolder(originPath, originName, destinationPath, destinationName) {\n    // TODO: Combine these two promises for better performance\n    await createFolder(destinationPath, destinationName);\n    const { files, folders } = await readFolder(originPath, originName);\n\n    const promises = [\n        ...files.map(({ name }) => copyFile(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name)),\n        ...folders.map(({ name }) => copyFolder(`${originPath}/${originName}`, name, `${destinationPath}/${destinationName}`, name))\n    ];\n\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to upload files\n * @param {String} path\n * @param {FileList} fileList\n * @returns {Response}\n */\nexport async function upload(path, fileList) {\n    const promises = Array.from(fileList).map(file => updateItem(path, file.name, file));\n    await Promise.all(promises);\n    return new Response();\n};\n\n\n/**\n * Fetch API to create a folder\n * @param {String} path\n * @param {String} folderName\n * @returns {Response}\n */\nexport async function createFolder(path, folderName) {\n    if (await folderExists(path, folderName))\n        return new Response();\n\n    return createItem(path, folderName, '', 'dir');\n}\n\n\n/**\n * Fetch API to create update or create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nexport async function updateItem(path, itemName, content, contentType) {\n    await removeItem(path, itemName);\n    return createItem(path, itemName, content, contentType);\n}\n\n\n/**\n * Fetch API to create create an item\n * @param {String} path\n * @param {String} itemName\n * @param {String} content\n * @param {String} contentType\n * @returns {Response}\n */\nasync function createItem(path, itemName, content, contentType) {\n    const baseUrl = `${config.getHost()}${path}`;\n    const link = (contentType === 'dir') ?\n        '<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"'\n        : '<http://www.w3.org/ns/ldp#Resource>; rel=\"type\"';\n\n    const request = {\n        method: 'POST',\n        headers: {\n            link,\n            slug: itemName,\n            'Content-Type': contentType\n        },\n        body: content\n    };\n\n    return solidAuth.fetch(baseUrl, request)\n        .then(assertSuccessfulResponse);\n}\n\n\n/**\n * Fetch API to remove multiple items\n * @param {String} path\n * @param {Array} itemNames\n * @returns {Response}\n */\nexport async function removeItems(path, itemNames) {\n    await Promise.all(itemNames.map(itemName => removeItem(path, itemName)));\n    return new Response();\n};\n\n\n/**\n * Fetch API to remove one item\n * @param {String} path \n * @param {String} itemName \n * @returns {Response}\n */\nexport async function removeItem(path, itemName) {\n    const url = buildFileUrl(path, itemName);\n\n    const response = await solidAuth.fetch(url, { method: 'DELETE' });\n    if (response.status === 409 || response.status === 301) {\n        // Solid pod returns 409 if the item is a folder and is not empty\n        // Solid pod returns 301 if is attempted to read a folder url without '/' at the end (from buildFileUrl)\n        return removeFolderRecursively(path, itemName);\n    }\n    else if (response.status === 404) {\n        // Don't throw if the item didn't exist\n        return response;\n    }\n    else {\n        assertSuccessfulResponse(response);\n        return response;\n    }\n}\n\n\n/**\n * Fetch API to remove contents and folder itself recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderRecursively(path, folderName) {\n    await removeFolderContents(path, folderName);\n    return removeItem(path, folderName);\n}\n\n\n/**\n * Fetch API to remove contents of one folder recursively\n * @param {String} path \n * @param {String} folderName\n * @returns {Response}\n */\nexport async function removeFolderContents(path, folderName) {\n    const folderPath = `${path}/${folderName}`;\n\n    const { files, folders } = await readFolder(path, folderName);\n    const promises = [\n        ...files.map(({ name }) => removeItem(folderPath, name)),\n        ...folders.map(({ name }) => removeFolderRecursively(folderPath, name))\n    ];\n    await Promise.all(promises);\n    return new Response();\n}\n\n\n/**\n * Fetch API to check if a folder exists\n * @param {String} path\n * @param {String} folderName\n * @returns {Promise<Boolean>}\n */\nexport async function folderExists(path, folderName) {\n    try {\n        await fetchFolder(path, folderName);\n        return true;\n    }\n    catch (error) {\n        if (error instanceof Response && error.status === 404)\n            return false;\n\n        throw error;\n    }\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a folder name\n * @param {String} path\n * @param {String} folderName\n * @return {String}\n */\nfunction buildFolderUrl(path, folderName = '') {\n    return buildFileUrl(path, folderName) + '/';\n}\n\n\n/**\n * Build up an url from a path relative to the storage location and a fileName\n * @param {String} path \n * @param {Sting} fileName \n * @return {String}\n */\nfunction buildFileUrl(path, fileName = '') {\n    let url = `${config.getHost()}${path}/${fileName}`;\n    while (url.slice(-1) === '/')\n        url = url.slice(0, -1);\n\n    return url;\n}\n\n\n/**\n * Throw response if fetch response was unsuccessful\n * @param {Response} response\n * @returns {Response}\n */\nconst assertSuccessfulResponse = (response) => {\n    if (!response.ok)\n        throw response;\n    return response;\n};","import * as API from './Api.js';\nimport * as JSZip from 'jszip';\nimport { FileItem, FolderItem } from './Item.js';\nimport ApiCache from './ApiCache';\n\nconst cache = new ApiCache();\n\n/**\n * Log a fetch response error and throw it again\n * @param {*} error \n */\nconst handleFetchError = async (error) => {\n    let detailedErrorMessage = '';\n    let displayErrorMessage;\n\n    console.group('handleFetchError');\n    if (error instanceof Response) {\n        detailedErrorMessage = await error.text();\n\n        console.error(`url: ${error.url}`);\n        console.error(`status: ${error.status}`);\n\n        const displayMessages = {\n            '401': `The ressource at ${error.url} requires you to login.`,\n            '403': `You don't have permission to access the ressource at ${error.url}.\n            Please make sure that you are logged in with the correct account.\n            If the server runs with version 5.0.0 or higher, make sure you gave this app read/write permission`,\n            '404': `The ressource at ${error.url} was not found`,\n            '500': `An internal server error occured...\n            ${detailedErrorMessage}`,\n        };\n        if (error.status in displayMessages)\n            displayErrorMessage = displayMessages[error.status];\n    }\n    else if (error instanceof Error) {\n        detailedErrorMessage = error.message;\n        console.error(error.stack);\n    }\n    else if (typeof error === 'string') {\n        detailedErrorMessage = error;\n    }\n    else {\n        detailedErrorMessage = JSON.stringify(error);\n    }\n    console.error(`errorMessage: ${detailedErrorMessage}`);\n    console.error(`error: ${error}`);\n    console.groupEnd();\n\n    throw new Error((displayErrorMessage) ? displayErrorMessage : detailedErrorMessage);\n}\n\n/**\n * Clean path string removing double slashes and prepending a slash if non-empty\n * @param {String} path\n * @returns {String}\n */\nconst fixPath = (path) => {\n    if (path === \"\")\n        return path;\n    return ('/' + path).replace(/\\/\\//g, '/');\n};\n\n/**\n * Wrap API response for retrieving item list\n * itemList is cached automatically\n * @param {String} path\n * @returns {Promise<API.FolderItems>}\n */\nexport const getItemList = (path) => {\n    path = fixPath(path);\n    if (cache.contains(path))\n\treturn Promise.resolve(cache.get(path));\n    return API.readFolder(path)\n        .then(({ files, folders }) => [...files, ...folders])\n        .then(itemList => cache.add(path, itemList))\n        .catch(handleFetchError);\n};\n\n/**\n * @param {String} path \n */\nexport const clearCacheForFolder = (path) => cache.remove(fixPath(path));\nexport const clearCache = () => cache.clear();\n\n/**\n * Wrap API response for retrieving file content\n * @param {String} path\n * @param {String} filename\n * @returns {Promise<Blob>}\n */\nexport const getFileBlob = (path, filename) => {\n    path = fixPath(path);\n    return API.fetchFile(path, filename)\n        .then(response => response.blob())\n        .catch(handleFetchError);\n};\n\n\n/**\n * Wrap API response for renaming a file\n * @param {String} path\n * @param {String} fileName\n * @param {String} newFileName\n * @returns {Promise<Response>}\n */\nexport const renameFile = (path, fileName, newFileName) => {\n    path = fixPath(path);\n    cache.remove(path);\n    return API.renameFile(path, fileName, newFileName)\n        .catch(handleFetchError)\n};\n\n\n/**\n * Wrap API response for renaming a folder\n * @param {String} path\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Promise<Response>}\n */\nexport const renameFolder = (path, folderName, newFolderName) => {\n    path = fixPath(path);\n    cache.remove(path);\n    return API.renameFolder(path, folderName, newFolderName)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for creating a folder\n * @param {String} path\n * @param {String} folder\n * @returns {Promise<Response>}\n */\nexport const createFolder = (path, folder) => {\n    path = fixPath(path);\n    cache.remove(path);\n    if (!(folder || '').trim()) {\n        return Promise.reject('Invalid folder name');\n    }\n    return API.createFolder(path, folder)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for removing a file or folder\n * @param {String} path\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const removeItems = (path, filenames) => {\n    path = fixPath(path);\n    cache.remove(path);\n    if (!filenames.length) {\n        return Promise.reject('No files to remove');\n    }\n    return API.removeItems(path, filenames)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for moving a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const moveItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    cache.remove(path, destination);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to move');\n    }\n    return API.moveItems(path, destination, filenames)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for copying a file or folder\n * @param {String} path\n * @param {String} destination\n * @param {Array<String>} filenames\n * @returns {Promise<Response>}\n */\nexport const copyItems = (path, destination, filenames) => {\n    path = fixPath(path);\n    cache.remove(path, destination);\n    destination = fixPath(destination);\n    if (!filenames.length) {\n        return Promise.reject('No files to copy');\n    }\n    return API.copyItems(path, destination, filenames)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for uploading files\n * @param {String} path\n * @param {Object<FileList>} fileList\n * @returns {Promise<Response>}\n */\nexport const uploadFiles = (path, fileList) => {\n    path = fixPath(path);\n    cache.remove(path);\n\n    if (!fileList.length) {\n        return Promise.reject('No files to upload');\n    }\n    return API.upload(path, fileList)\n        .catch(handleFetchError)\n};\n\n/**\n * Wrap API response for uploading a file\n * @param {String} path\n * @param {String} fileName\n * @param {Blob} content\n * @returns {Promise<Response>}\n */\nexport const updateFile = (path, fileName, content) => {\n    path = fixPath(path);\n    cache.remove(path);\n    return API.updateItem(path, fileName, content)\n        .catch(handleFetchError);\n};\n\n/**\n * Wrap API response for zipping multiple items\n * @param {String} path\n * @param {Array<API.FolderItems>} itemList\n * @returns {Promise<Object>}\n */\nexport const getAsZip = (path, itemList) => {\n    path = fixPath(path);\n    const zip = new JSZip();\n\n    return addItemsToZip(zip, path, itemList)\n        .then(() => zip);\n}\n\n/**\n * Add items to a zip object recursively\n * @param {Object} zip\n * @param {String} path\n * @param {Array<API.FolderItems>} itemList\n * @returns {Promise<Object>}\n */\nconst addItemsToZip = (zip, path, itemList) => {\n    const promises = itemList.map(async item => {\n        if (item instanceof FolderItem) {\n            const zipFolder = zip.folder(item.name);\n            const folderPath = `${path}/${item.name}`;\n            const folderItems = await getItemList(folderPath);\n            return addItemsToZip(zipFolder, folderPath, folderItems);\n        }\n        else if (item instanceof FileItem) {\n            const blob = await getFileBlob(path, item.name);\n            return zip.file(item.name, blob, { binary: true });\n        }\n    });\n\n    return Promise.all(promises);\n}\n\n/**\n * Wrap API response for extracting a zip archive\n * @param {String} path\n * @param {String} destination\n * @param {String} fileName\n */\nexport const extractZipArchive = async (path, destination = path, fileName) => {\n    const blob = await getFileBlob(path, fileName);\n    const zip = await JSZip.loadAsync(blob);\n    cache.remove(path, destination);\n\n    return uploadExtractedZipArchive(zip, destination);\n};\n\n/**\n * Recursively upload all files and folders from an extracted zip archive\n * @param {Object} zip \n * @param {String} destination \n * @param {String} curFolder \n */\nasync function uploadExtractedZipArchive(zip, destination, curFolder = '') {\n    const promises = getItemsInZipFolder(zip, curFolder)\n        .map(async item => {\n            const relativePath = item.name;\n            const itemName = getItemNameFromPath(relativePath);\n            const path = getParentPathFromPath(`${destination}/${relativePath}`);\n\n            if (item.dir) {\n                await createFolder(path, itemName);\n                return uploadExtractedZipArchive(zip, destination, relativePath);\n            }\n            else {\n                const blob = await item.async('blob');\n                return updateFile(path, itemName, blob);\n            }\n        });\n\n    return Promise.all(promises);\n};\n\nfunction getItemsInZipFolder(zip, folderPath) {\n    return Object.keys(zip.files)\n        .filter(fileName => {\n            // Only items in the current folder and subfolders\n            const relativePath = fileName.slice(folderPath.length, fileName.length);\n            if (!relativePath || fileName.slice(0, folderPath.length) !== folderPath)\n                return false;\n            \n            // No items from subfolders\n            if (relativePath.includes('/') && relativePath.slice(0, -1).includes('/'))\n                return false;\n\n            return true;\n        })\n        .map(key => zip.files[key]);\n};\n\nfunction getItemNameFromPath(path) {\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    return path.substr(path.lastIndexOf('/') + 1);\n}\n\nfunction getParentPathFromPath(path) {\n    path = path.endsWith('/') ? path.slice(0, -1) : path;\n    path = path.substr(0, path.lastIndexOf('/'));\n    return path;\n}\n","// eslint-disable-next-line no-unused-vars\nimport { Item } from './Item';\n\nexport default class ApiCache {\n    constructor() {\n        this._data = {};\n    }\n\n    /**\n     * Add data to the cache\n     * @param {Array<String>} path \n     * @param {Array<Item>} itemList \n     * @returns {Array<Item>}\n     */\n    add(path, itemList) {\n        this._data[path] = itemList;\n        return itemList;\n    }\n\n    /**\n     * Return true if the url is already cached\n     * @param {Array<String>} path \n     * @returns {Boolean}\n     */\n    contains(path) {\n        return this._data.hasOwnProperty(path);\n    }\n\n    /**\n     * Get the cached data\n     * @param {Array<String>} path \n     * @returns {Array<Item>}\n     */\n    get(path) {\n        return this._data[path];\n    }\n\n    /**\n     * @param {Array<String>} path\n     */\n    remove(path) {\n        delete this._data[path];\n    }\n\n    clear() {\n        this._data = {};\n    }\n}\n","import * as APIHandler from '../Api/ApiHandler.js';\nimport * as solidAuth from 'solid-auth-client';\nimport { createBrowserHistory } from 'history';\n// eslint-disable-next-line no-unused-vars\nimport { Item, FileItem, FolderItem } from '../Api/Item.js';\n\n// Note: This doesn't seem like a good way to handle this, but it's the best I've come up with for now.\n// Feel free to change in the future\nlet history;\nexport const initBrowserHistory = () => (dispatch, getState) => {\n\thistory = createBrowserHistory();\n\thistory.listen((location, action) => {\n\t\tif (action === 'POP') {\n            let host, path;\n            if (location && typeof location.state !== typeof undefined) {\n                ({ host, path } = location.state);\n            }\n            else {\n                const params = new URLSearchParams(location.search.substr(1));\n                const url = params.get('url');\n                if (url !== null) {\n                    ({ host, path } = getLocationObjectFromUrl(url));\n                }\n            }\n            dispatch(setHost(host));\n            dispatch(enterFolderWithoutUpdatingHistory(path));\n\t\t}\n\t});\n};\nexport const updateBrowserHistory = () => (dispatch, getState) => {\n    const { host, path } = getState();\n    const url = `${host}/${path.join('/')}`;\n\thistory.push(`?url=${encodeURI(url)}`, { host, path });\n}\n\nexport const getLocationObjectFromUrl = (url) => {\n    url = new URL(url);\n    const host = url.origin;\n    const path = url.pathname.split('/').filter(val => val !== '');\n\n    return {\n        host,\n        path\n    };\n}\n\nexport const solidLogin = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidPopupLogin().then(webId => {\n        dispatch(setWebId(webId));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\nasync function solidPopupLogin() {\n    let session = await solidAuth.currentSession();\n    if (!session) {\n        let popupUri = 'https://solid.community/common/popup.html';\n        session = await solidAuth.popupLogin({ popupUri });\n    }\n    return (session.webId);\n}\n\n\nexport const solidLogout = () => (dispatch, getState) => {\n    dispatch(setLoading(true));\n\n    solidAuth.logout().then(() => {\n        dispatch(setPath([]));\n        dispatch(setPathSublist([]));\n        dispatch(setItemList([]));\n        dispatch(setSelectedItems([]));\n        APIHandler.clearCache();\n        dispatch(setIsLoggedIn(false));\n        dispatch(setWebId(''));\n        dispatch(setVisibleDialogSolidLogout(false));\n        dispatch(setVisibleDialogSolidLogin(true));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedItems([]));\n    dispatch(setFileUploadProgress(50));\n\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\n        dispatch(setFileUploadProgress(100));\n        setTimeout(f => {\n            dispatch(resetFileUploader());\n        }, 300);\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\nexport const createFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateFile(path.join('/'), fileName, '').then(r => {\n        dispatch(setVisibleDialogCreateFile(false));\n        dispatch(displayCurrentItemList());\n\n        APIHandler.getItemList(path.join('/')).then(itemList => {\n            const item = itemList.find(item => item.name === fileName || item.name === encodeURI(fileName));\n            dispatch(setSelectedItems([item]));\n            dispatch(getFileContent(item.name));\n            dispatch(setVisibleDialogEdit(true));\n        });\n    });\n};\n\n\nexport const updateTextFile = (fileName, content) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.updateFile(path.join('/'), fileName, content).then(r => {\n        dispatch(setVisibleDialogEdit(false));\n        dispatch(displayCurrentItemList());\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n}\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const displayCurrentItemList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setSelectedItems([]));\n    APIHandler.getItemList(path.join('/')).then(items => {\n        dispatch(setLoading(false));\n        dispatch(setItemList(items));\n    }).catch(r => {\n        dispatch(setItemList([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to reload the file list and then refresh UI\n */\nexport const refreshItemList = () => (dispatch, getState) => {\n    const { path } = getState();\n    APIHandler.clearCacheForFolder(path);\n    return displayCurrentItemList();\n};\n\n\n/**\n * Request API to get file list for the selected path then refresh UI\n * @returns {Function}\n */\nexport const updateItemListSublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setLoadingSublist(true));\n    dispatch(setSelectedFolderSublist(null));\n\n    APIHandler.getItemList(pathSublist.join('/')).then(r => {\n        dispatch(setLoadingSublist(false));\n        dispatch(setItemListSublist(r));\n    }).catch(r => {\n        dispatch(setItemListSublist([]));\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoadingSublist(false));\n    });\n};\n\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const renameFile = (fileName, newFileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFile(path.join('/'), fileName, newFileName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to rename file then dispatch defined events\n * @param {String} folderName\n * @param {String} newFolderName\n * @returns {Function}\n */\nexport const renameFolder = (folderName, newFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    APIHandler.renameFolder(path.join('/'), folderName, newFolderName).then(blob => {\n        dispatch(setVisibleDialogRename(false));\n        dispatch(setLoading(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n/**\n * Request API to download the specified items\n * @param {Array<Object>} itemList\n * @returns {Function}\n */\nexport const downloadItems = (itemList) => async (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    try {\n        let blob;\n        let downloadName = itemList[0].name;\n        if (itemList.length === 1 && itemList[0] instanceof FileItem) {\n            blob = await APIHandler.getFileBlob(path.join('/'), itemList[0].name);\n        }\n        else {\n            const zip = await APIHandler.getAsZip(path.join('/'), itemList);\n            blob = await zip.generateAsync({ type: 'blob' });\n\n            if (itemList.length > 1)\n                downloadName = 'Archive';\n            downloadName = `${downloadName}.zip`;\n        }\n\n        promptDownload(blob, downloadName);\n        dispatch(setLoading(false));\n    }\n    catch (e) {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: e.toString()\n        });\n        dispatch(setLoading(false));\n    }\n};\n\n/**\n * Request API to upload the items as zip archive\n * @param {Array<Object>} itemList\n * @returns {Function}\n */\nexport const zipAndUpload = (itemList) => (dispatch, getState) => {\n    const { path } = getState();\n    const archiveName = (itemList.length === 1 && itemList[0] instanceof FolderItem) ? `${itemList[0].name}.zip` : 'Archive.zip';\n\n    dispatch(setLoading(true));\n    APIHandler.getAsZip(path.join('/'), itemList)\n        .then(zip => zip.generateAsync({ type: 'blob' }))\n        .then(blob => APIHandler.updateFile(path.join('/'), archiveName, blob))\n        .then(() => {\n            dispatch(setLoading(false));\n            dispatch(displayCurrentItemList());\n        })\n        .catch(r => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: r.toString()\n            });\n            dispatch(setLoading(false));\n        });\n};\n\n/**\n * Request API for extracting a zip archive\n * @param {String} fileName\n * @returns {Function}\n */\nexport const extractZipFile = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n\n    dispatch(setLoading(true));\n    APIHandler.extractZipArchive(path.join('/'), path.join('/'), fileName).then(r => {\n        dispatch(setLoading(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n// code from https://stackoverflow.com/a/30832210/6548154\nfunction promptDownload(file, fileName) {\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\n        window.navigator.msSaveOrOpenBlob(file, fileName);\n    else { // Others\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file);\n        a.href = url;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 0);\n    }\n}\n\n/**\n * Opens the item in a new tab\n * @param {Item} item \n */\nexport const openInNewTab = (item) => (dispatch, getState) => {\n    window.open(item.url, '_blank');\n};\n\n\n/**\n * Request API to get file content then dispatch defined events\n * @param {String} fileName\n * @returns {Function}\n */\nexport const getFileContent = (fileName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n    dispatch(setFileContent(null));\n    APIHandler.getFileBlob(path.join('/'), fileName).then(blob => {\n        dispatch(setFileContent(blob));\n        dispatch(setLoading(false));\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to get file content and open the edit dialogue\n * @param {String} fileName\n * @returns {Function} \n */\nexport const loadAndEditFile = (fileName) => (dispatch, getState) => {\n    dispatch(getFileContent(fileName));\n    dispatch(setVisibleDialogEdit(true));\n};\n\n\n/**\n * Request API to get file content and display it\n * @param {String} fileName\n * @returns {Function} \n */\nexport const loadAndDisplayFile = (fileName) => (dispatch, getState) => {\n    dispatch(getFileContent(fileName));\n    dispatch(setVisibleDialogContent(true));\n};\n\n\n/**\n * Request API to display an audio or video file\n * @returns {Function}\n */\nexport const displaySelectedMediaFile = () => (dispatch, getState) => {\n    dispatch(setVisibleDialogMedia(true));\n};\n\n\n/**\n * Request API to create a folder then dispatch defined events\n * @param {String} createFolderName\n * @returns {Function}\n */\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setLoading(true));\n\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\n        dispatch(setVisibleDialogCreateFolder(false));\n        dispatch(setLoading(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to remove an item then dispatch defined events\n * @param {Array<Item>} items\n * @returns {Function}\n */\nexport const removeItems = (items) => (dispatch, getState) => {\n    const { path } = getState();\n    const itemNames = items.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.removeItems(path.join('/'), itemNames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to move an item then dispatch defined events\n * @param {Array<Item>} items\n * @returns {Function}\n */\nexport const moveItems = (items) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const itemNames = items.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.moveItems(path.join('/'), destination, itemNames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogMove(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * Request API to copy an item then dispatch defined events\n * @param {Array<Item>} items\n * @returns {Function}\n */\nexport const copyItems = (items) => (dispatch, getState) => {\n    const { path, pathSublist, selectedFolderSublist } = getState();\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\n    const itemNames = items.map(f => f.name);\n\n    dispatch(setLoading(true));\n    APIHandler.copyItems(path.join('/'), destination, itemNames).then(r => {\n        dispatch(setLoading(false));\n        dispatch(setVisibleDialogCopy(false));\n        dispatch(displayCurrentItemList());\n    }).catch(r => {\n        dispatch({\n            type: 'SET_ERROR_MSG',\n            value: r.toString()\n        });\n        dispatch(setLoading(false));\n    });\n};\n\n\n/**\n * This handles multiple selection by using shift key\n * @param {Object} lastFile\n * @returns {Function}\n */\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\n    const { itemList, selectedItems } = getState();\n\n    const lastPreviouslySelected = [...selectedItems].pop();\n    const lastPreviouslySelectedIndex = itemList.indexOf(itemList.find(f => f.name === lastPreviouslySelected.name))\n    const lastSelectedIndex = itemList.indexOf(itemList.find(f => f.name === lastFile.name))\n\n    let toAdd = [];\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\n        toAdd = itemList.filter((index, element) => {\n            return itemList.indexOf(index) <= lastSelectedIndex && itemList.indexOf(index) >= lastPreviouslySelectedIndex\n        });\n    } else {\n        toAdd = itemList.filter((index, element) => {\n            return itemList.indexOf(index) >= lastSelectedIndex && itemList.indexOf(index) <= lastPreviouslySelectedIndex\n        });\n    }\n    dispatch(setSelectedItems([...selectedItems, ...toAdd]));\n};\n\n\n/**\n * @returns {Function}\n */\nexport const initSubList = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(setSelectedFolderSublist(null));\n    dispatch(setItemListSublist([]));\n    dispatch(setPathSublist([...path]));\n    dispatch(updateItemListSublist());\n};\n\nexport const resetFileUploader = () => (dispatch, getState) => {\n    dispatch(setFileUploadProgress(0));\n    dispatch(setVisibleDialogUploadFile(false));\n    dispatch(setFileUploadList([]));\n};\n\n\nexport const enterFolder = (path) => (dispatch, getState) => {\n    dispatch(enterFolderWithoutUpdatingHistory(path));\n    dispatch(updateBrowserHistory());\n};\n\nexport const enterFolderByItem = (item) => (dispatch, getState) => {\n    const path = item.path;\n    // Open containing folder if it is a file\n    dispatch(enterFolderWithoutUpdatingHistory(item instanceof FileItem ? path : [...path, item.name]));\n    dispatch(updateBrowserHistory());\n};\n\nexport const enterFolderWithoutUpdatingHistory = (path) => (dispatch, getState) => {\n    dispatch(setPath(path));\n    dispatch(setFileListFilter(null));\n    dispatch(displayCurrentItemList());\n};\n\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(enterFolder(path.slice(0, -1)));\n};\n\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\n    const { path } = getState();\n    dispatch(enterFolder([...path].slice(0, ++index)));\n};\n\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\n    const { pathSublist } = getState();\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\n    dispatch(updateItemListSublist());\n};\n\nexport const setPath = (path) => {\n    return {\n        type: 'SET_PATH',\n        value: path\n    };\n};\n\nexport const setPathSublist = (path) => {\n    return {\n        type: 'SET_PATH_SUB_LIST',\n        value: path\n    };\n};\n\nexport const setHost = (host) => {\n    return {\n        type: 'SET_HOST',\n        value: host\n    };\n};\n\nexport const setIsLoggedIn = (isLoggedIn) => {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        value: isLoggedIn\n    };\n};\n\nexport const setWebId = (webId) => {\n    return {\n        type: 'SET_WEB_ID',\n        value: webId\n    };\n};\n\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\n    dispatch({\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\n        value: directory\n    });\n    dispatch(updateItemListSublist());\n};\n\nexport const setItemList = (itemList) => {\n    return {\n        type: 'SET_ITEM_LIST',\n        value: itemList\n    };\n};\n\nexport const setItemListSublist = (itemList) => {\n    return {\n        type: 'SET_ITEM_LIST_SUB_LIST',\n        value: itemList\n    };\n};\n\nexport const setSelectedItems = (items) => {\n    return {\n        type: 'SET_SELECTED_ITEMS',\n        value: items\n    };\n};\n\nexport const setSelectedFolderSublist = (file) => {\n    return {\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\n        value: file\n    };\n};\n\nexport const setFileListFilter = (search) => {\n    return {\n        type: 'SET_FILE_LIST_FILTER',\n        value: search\n    };\n};\n\nexport const setContextMenuVisible = (visible) => {\n    return {\n        type: 'SET_CONTEXT_MENU_VISIBLE',\n        value: !!visible\n    };\n};\n\nexport const setContextMenuPosition = (x, y) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION',\n        value: [x, y]\n    };\n};\n\nexport const setContextMenuPositionElement = (element) => {\n    return {\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\n        value: element\n    };\n};\n\nexport const toggleSelectedFile = (file) => {\n    return {\n        type: 'TOGGLE_SELECTED_FILE',\n        value: file\n    };\n};\n\nexport const rightClickOnFile = (item) => (dispatch, getState) => {\n    const { selectedItems } = getState();\n    const isSelected = selectedItems.indexOf(selectedItems.find(f => f.name === item.name)) !== -1;\n\n    !isSelected && dispatch(setSelectedItems([item]));\n};\n\nexport const setLoading = (value) => {\n    return {\n        type: 'SET_LOADING',\n        value: value\n    };\n};\n\nexport const setLoadingSublist = (value) => {\n    return {\n        type: 'SET_LOADING_SUB_LIST',\n        value: value\n    };\n};\n\nexport const setVisibleDialogSolidLogin = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGIN',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogSolidLogout = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_SOLID_LOGOUT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFolder = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCreateFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CREATE_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogUploadFile = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogRename = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_RENAME',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMove = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MOVE',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogCopy = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_COPY',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogContent = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogMedia = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_MEDIA',\n        value: !!visible\n    };\n};\n\nexport const setVisibleDialogEdit = (visible) => {\n    return {\n        type: 'SET_VISIBLE_DIALOG_EDIT',\n        value: !!visible\n    };\n};\n\nexport const setFileContent = (blob) => {\n    return {\n        type: 'SET_FILE_CONTENT',\n        value: blob\n    };\n};\n\nexport const setFileUploadProgress = (percentage) => {\n    return {\n        type: 'SET_FILE_UPLOAD_PROGRESS',\n        value: percentage\n    };\n};\n\nexport const setFileUploadList = (files) => {\n    return {\n        type: 'SET_FILE_UPLOAD_LIST',\n        value: files\n    };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\n    setSelectedFileFromLastTo, loadAndEditFile, loadAndDisplayFile, displaySelectedMediaFile,\n    rightClickOnFile, setSelectedItems, enterFolderByItem\n} from '../../Actions/Actions.js';\nimport './File.css';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport { FileItem } from '../../Api/Item.js';\n\nclass File extends Component {\n    render() {\n        const { isSelected, item, handleClick, handleDoubleClick, handleContextMenu } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        const realSize = (item instanceof FileItem) ? item.getDisplaySize() : null;\n        return (\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { (item instanceof FileItem) ? <FileIcon /> : <FolderIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText className=\"filename\" primary={item.getDisplayName()} secondary={realSize} />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isSelected: state.selectedItems.some(item => item.equals(ownProps.item))\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            const item = ownProps.item;\n\n            if (item instanceof FileItem) {\n                if (item.isEditable())\n                    dispatch(loadAndEditFile(item.name));\n                else if (item.isImage())\n                    dispatch(loadAndDisplayFile(item.name));\n                else if (item.isMedia())\n                    dispatch(displaySelectedMediaFile());\n            }\n            else\n                dispatch(enterFolderByItem(item));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleContextMenu: (event) => {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\n\n            if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps.item));\n            } else {\n                dispatch(rightClickOnFile(ownProps.item));\n            }\n            \n            dispatch(setContextMenuVisible(true));\n            dispatch(setContextMenuPosition(x, y));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n\n            if (event.ctrlKey) {\n                dispatch(toggleSelectedFile(ownProps.item));\n            } else if (event.shiftKey) {\n                dispatch(setSelectedFileFromLastTo(ownProps.item));\n            } else {\n                dispatch(setSelectedItems([ownProps.item]));\n            }\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './FileListEmptyMessage.css';\n\nclass FileListEmptyMessage extends Component {\n    render() {\n        return (\n            <div className=\"FileListEmptyMessage\">\n                No files in this folder\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 10,\n  },\n});\n\nfunction Loader(props) {\n    const { classes } = props;\n    return (\n        <Grid container justify=\"center\">\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n        </Grid>\n    );\n}\n\nLoader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Loader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport File from '../File/File.jsx'; \nimport FileListEmptyMessage from './FileListEmptyMessage';\nimport Loader from '../Loader/Loader.jsx'; \nimport './FileList.css';\n\nclass FileList extends Component {\n    render() {\n        const { itemList, loading } = this.props;\n        const itemComponents = itemList.map((item, key) => {\n            return <File item={item} key={key} />;\n        });\n\n        return <div className=\"FileList\">\n            { loading ? \n                <Loader /> : \n                itemComponents.length ? itemComponents : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const filterVal = state.fileListFilter;\n    const itemList = filterVal ?\n        state.itemList.filter(item => filterMatch(item.getDisplayName(), filterVal))\n        : state.itemList;\n\n    return {\n        itemList,\n        loading: state.loading\n    };\n};\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClick: (event) => {\n        }\n    };\n};\n\nconst filterMatch = (first, second) => {\n    return first.toLocaleLowerCase().match(second.toLocaleLowerCase());\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\n\n\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nfunction CreateFolderAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CreateNewFolderIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create folder\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFolder(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nfunction CreateFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <InsertDriveFileIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Create file\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogCreateFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\n\nfunction UploadFileAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <CloudUploadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Upload files\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogUploadFile(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport { setVisibleDialogSolidLogin } from '../../../Actions/Actions.js';\n\nfunction SolidLoginAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <PermIdentityIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Login\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogin(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLoginAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nfunction SolidLogoutAction(props) {\n    const {handleClick, handleClose} = props;\n\n    const handleCloseAfter = (callback) => (event) => {\n        callback();\n        handleClose();\n    };\n\n    return (\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\n            <ListItemIcon>\n                <ClearIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Logout\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogSolidLogout(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SolidLogoutAction);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\nimport CreateFileAction from '../ContextMenu/ContextMenuActions/CreateFileAction.jsx';\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\nimport SolidLoginAction from '../ContextMenu/ContextMenuActions/SolidLoginAction';\nimport SolidLogoutAction from '../ContextMenu/ContextMenuActions/SolidLogoutAction.jsx';\n\nclass ThreeDotsMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const { isLoggedIn } = this.props;\n\n    return (\n      <div style={{marginLeft:'1em'}}>\n        <IconButton color=\"inherit\" \n          aria-label=\"More\"\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}>\n          <MoreVertIcon />\n        </IconButton>\n\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\n          <CreateFolderAction handleClose={this.handleClose} />\n          <CreateFileAction handleClose={this.handleClose} />\n          <UploadFileAction handleClose={this.handleClose} />\n          { isLoggedIn ?\n            <SolidLogoutAction handleClose={this.handleClose} />\n            : <SolidLoginAction handleClose={this.handleClose} />\n          }\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport Button from '@material-ui/core/Button';\nimport './BreadcrumbText.css';\n\nconst styles = theme => ({\n  lastPath: {\n    display: 'block',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  paths: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    }\n  }\n});\n\nclass BreadcrumbText extends Component {\n\n    render() {\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\n\n        const separator = <span>&gt;</span>;\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\n            { rootTitle } { path.length ? separator : '' }\n        </span>;\n        const lastPath = [...path].pop() || rootTitle;\n\n        const directories = path.map((dir, index) => {\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\n            </span>\n        });\n\n        return (\n            <div className=\"BreadcrumbText\">\n                <div className={classes.lastPath}>\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\n                        <KeyboardArrowLeftIcon />\n                    </Button>\n                    {lastPath}\n                </div>\n                <div className={classes.paths}>{rootPath} {directories}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { connect } from 'react-redux';\nimport { setFileListFilter, enterToPreviousDirectoryByIndex, refreshItemList } from '../../Actions/Actions.js';\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '4.3em'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'block', // was none\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n      display: 'block'\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 100,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\nfunction SearchAppBar(props) {\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n            <BreadcrumbText \n                path={path} \n                handleClickPath={handleClickPath} \n                handleGoBack={handleGoBack}\n                canGoBack={canGoBack}\n                rootTitle=\"Solid Filemanager\"\n            />\n          </Typography>\n          <div className={classes.grow} />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={props.value}\n              onChange={props.handleChange}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n            />\n          </div>\n          <IconButton color=\"inherit\" aria-label=\"Refresh\" onClick={props.handleRefresh}>\n            <RefreshIcon/>\n          </IconButton>\n          <ThreeDotsMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nSearchAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        value: state.fileListFilter || '',\n        path: state.path,\n        canGoBack: state.path.length\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleChange: (event) => {\n            dispatch(setFileListFilter(event.currentTarget.value));\n        },\n        handleGoBack: (event) => {\n            dispatch(enterToPreviousDirectory());\n        },\n        /**\n         * @param {Object} event\n         * @param {Number} index\n         * @param {Array} path\n         * @returns {undefined}\n         */        \n        handleClickPath: (event, index) => {\n            dispatch(enterToPreviousDirectoryByIndex(index));\n            event.preventDefault();\n        },\n        handleRefresh: () => dispatch(refreshItemList())\n    };\n};\n\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { loadAndDisplayFile, displaySelectedMediaFile, loadAndEditFile, enterFolderByItem } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport { FileItem, FolderItem } from '../../../Api/Item.js';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedItems} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            const item = selectedItems[0];\n\n            if (item instanceof FolderItem)\n                dispatch(enterFolderByItem(item));\n            else if (item instanceof FileItem) {\n                if (item.isEditable())\n                    dispatch(loadAndEditFile(item.name));\n                else if (item.isImage())\n                    dispatch(loadAndDisplayFile(item.name));\n                else if (item.isMedia())\n                    dispatch(displaySelectedMediaFile());\n            }\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { removeItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nfunction RemoveAction(props) {\n    const {handleClick, selectedItems} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <DeleteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Remove\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            dispatch(removeItems(selectedItems));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e)}>\n            <ListItemIcon>\n                <HowToVoteIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Move\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogMove(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\n\nfunction CopyAction(props) {\n    const {handleClick} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e)}>\n            <ListItemIcon>\n                <FileCopyIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Copy\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(initSubList());\n            dispatch(setVisibleDialogCopy(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { loadAndEditFile } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\n\nfunction OpenAction(props) {\n    const {handleClick, selectedItems} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <OpenInBrowserIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Edit\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            dispatch(loadAndEditFile(selectedItems[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\n\nfunction MoveAction(props) {\n    const {handleClick} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e)}>\n            <ListItemIcon>\n                <WrapTextIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Rename\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event) => {\n            dispatch(setVisibleDialogRename(true));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { zipAndUpload } from '../../../Actions/Actions.js';\n\nfunction ZipAction(props) {\n    const {handleClick, selectedItems} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <ArchiveIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Zip here\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            dispatch(zipAndUpload(selectedItems));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZipAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport { extractZipFile } from '../../../Actions/Actions.js';\n\nfunction ExtractAction(props) {\n    const {handleClick, selectedItems} = props;\n\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <UnarchiveIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Extract here\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            dispatch(extractZipFile(selectedItems[0].name));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExtractAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { downloadItems } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport { FileItem } from '../../../Api/Item.js';\n\nfunction DownloadAction(props) {\n    const {handleClick, selectedItems} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <CloudDownloadIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                {(selectedItems.length === 1 && selectedItems[0] instanceof FileItem) ? \n                    'Download'\n                    : 'Download Zip'\n                }\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            dispatch(downloadItems(selectedItems));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { openInNewTab } from '../../../Actions/Actions.js';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction OpenInNewTabAction(props) {\n    const {handleClick, selectedItems} = props;\n    return (\n        <MenuItem onClick={(e) => handleClick(e, selectedItems)}>\n            <ListItemIcon>\n                <LinkIcon   />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">\n                Open in new Tab\n            </Typography>\n        </MenuItem>        \n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: (event, selectedItems) => {\n            dispatch(openInNewTab(selectedItems[0]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenInNewTabAction);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ContextMenu.css';\nimport Menu from '@material-ui/core/Menu';\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\nimport EditAction from './ContextMenuActions/EditAction.jsx';\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\nimport ZipAction from './ContextMenuActions/ZipAction.jsx';\nimport ExtractAction from './ContextMenuActions/ExtractAction.jsx';\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\nimport OpenInNewTabAction from './ContextMenuActions/OpenInNewTabAction.jsx';\n// eslint-disable-next-line no-unused-vars\nimport { Item, FileItem, FolderItem } from '../../Api/Item';\n\nclass ContextMenu extends Component {\n\n    render() {\n        const { acts, visible, x, y } = this.props;\n\n        return (\n            <div>\n                <Menu\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: y, left: x }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    open={visible}\n                    onClose={() => { }}\n                    PaperProps={{ style: { width: 190 } }}>\n                    {acts.includes('open') && <OpenAction />}\n                    {acts.includes('openInNewTab') && <OpenInNewTabAction />}\n                    {acts.includes('download') && <DownloadAction />}\n                    {acts.includes('compress') && <ZipAction />}\n                    {acts.includes('extract') && <ExtractAction />}\n                    {acts.includes('edit') && <EditAction />}\n                    {acts.includes('copy') && <CopyAction />}\n                    {acts.includes('move') && <MoveAction />}\n                    {acts.includes('rename') && <RenameAction />}\n                    {acts.includes('remove') && <RemoveAction />}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        x: state.contextMenuPosition[0] || 0,\n        y: state.contextMenuPosition[1] || 0,\n        visible: !!state.contextMenuVisible,\n        acts: getActionsForMultipleItems(state.selectedItems),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\n\n/**\n * Get available actions for multiple items\n * @param {Array<Item>} items \n * @returns {Array<String>}\n */\nconst getActionsForMultipleItems = items => {\n    return items.length === 1 ?\n        getActionsForItem(items[0])\n        : [\n            'copy',\n            'move',\n            'remove',\n            'download',\n            'compress',\n        ];\n};\n\n/**\n * Get available actions for an item\n * @param {Item} item\n * @returns {Array<String>}\n */\nconst getActionsForItem = item => {\n    const commonActions = [\n        'openInNewTab',\n        'copy',\n        'move',\n        'rename',\n        'remove',\n        'download',\n    ];\n    return [\n        ...commonActions,\n        ...((item instanceof FileItem) ?\n            getActionsForFile(item)\n            : getActionsForFolder(item))\n    ];\n};\n\n/**\n * Get available file specific actions\n * @param {FileItem} file\n * @returns {Array<String>}\n */\nconst getActionsForFile = file => {\n    const actions = [];\n    file.isEditable() && actions.push('edit');\n    file.isExtractable() && actions.push('extract');\n    (file.isImage() || file.isMedia()) && actions.push('open');\n\n    return actions;\n};\n\n/**\n * Get available folder specific actions\n * @param {FolderItem} folder\n * @returns {Array<String>}\n */\nconst getActionsForFolder = folder => {\n    return [\n        'open',\n        'compress'\n    ];\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { solidLogin, setVisibleDialogSolidLogin, setHost, enterFolder, getLocationObjectFromUrl } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n    state = {\n      location: null,\n    };\n\n    componentWillReceiveProps(props) {\n      const { isLoggedIn, webId } = props;\n      const params = new URLSearchParams(document.location.search.substr(1));\n      const encodedUrl = params.get('url');\n\n      if (encodedUrl !== null) {\n        const location = decodeURI(encodedUrl);\n        this.setState({ location });\n      }\n      else if (isLoggedIn) {\n        const location = (new URL(webId)).origin;\n        this.setState({ location });\n      }\n    }\n\n    handleChange (event) {\n      const location = event.currentTarget.form.querySelector('input').value;\n      this.setState({ location });\n    }\n\n    handleSubmit (event) {\n        this.props.handleSubmit(event)(this.state.location);\n    }\n\n    render() {\n        let { location } = this.state;\n        const { handleClose, handleLogin, open, isLoggedIn } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-login\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-login\">Login to your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please login to your solid pod to access this app by clicking the login button below.</p>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogin}>\n                      Login\n                    </Button>\n                    {\n                      isLoggedIn && (\n                        <div>\n                          <p>Please enter the full url to the directory you want to open</p>\n                          <TextField autoFocus fullWidth margin=\"dense\" label=\"Directory Location\" type=\"text\" onChange={this.handleChange.bind(this)} value={location} />\n                        </div>\n                      )\n                    }\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSubmit.bind(this)} disabled={!isLoggedIn}>\n                      Open directory\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogin,\n        webId: state.webId,\n        isLoggedIn: state.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogin(false));\n        },\n        handleLogin: event => {\n            event.preventDefault();\n            dispatch(solidLogin());\n        },\n        handleSubmit: event => (location) => {\n            event.preventDefault();\n            const { host, path } = getLocationObjectFromUrl(location);\n            dispatch(setVisibleDialogSolidLogin(false));\n            dispatch(setHost(host));\n            dispatch(enterFolder(path));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { solidLogout, setVisibleDialogSolidLogout } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleLogout, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-solid-logout\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-solid-logout\">Logout from your Solid pod</DialogTitle>\n                  <DialogContent>\n                    <p>Please confirm logging out by clicking the Logout button below</p>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleLogout}>\n                      Logout\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogSolidLogout\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogSolidLogout(false));\n        },\n        handleLogout: event => {\n            event.preventDefault();\n            dispatch(solidLogout());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: '...',\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n        }\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        return (\n          <div style={{marginLeft:'1em'}}>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\n              <DialogTitle id=\"form-dialog-content\">Viewing file </DialogTitle>\n              <DialogContent>\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                  Close\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogContent,\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogContent(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogContent(true));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMedia } from '../../../Actions/Actions.js';\nimport Plyr from 'react-plyr';\nimport 'plyr/dist/plyr.css';\nimport { FileItem } from '../../../Api/Item.js';\n\nclass FormDialog extends Component {\n    render() {\n        const { fileName, url, provider, type, handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-display-media\" fullWidth={true} maxWidth={'lg'}>\n                <DialogTitle id=\"form-dialog-display-media\">Display Media</DialogTitle>\n                <DialogContent>\n                    <p>Playing {fileName}</p>\n                    <Plyr type={type} provider={provider} url={url} iconUrl=\"./vendor/plyr/plyr.svg\" />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const open = state.visibleDialogMedia;\n\n    const file = state.selectedItems[0];   \n\n    if (file instanceof FileItem) {\n            return {\n                open,\n                fileName: file.name,\n                url: file.url,\n                provider: file.isVideo() ? 'html5' : 'audio',\n                type: file.isVideo() ? 'video' : 'audio',\n            };\n    }\n    else\n        return { open };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogMedia(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogEdit, updateTextFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        lastBlobUrl: null,\n        content: null,\n        loading: false\n    };\n\n    componentDidUpdate() {\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\n            this.setState({\n                lastBlobUrl: this.props.blobUrl\n            });\n            this.setState({\n                loading: true\n            });\n\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\n                return r.text();\n            }).then(t => {\n                this.setState({\n                    content: t\n                });\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    handleSave (event) {\n        event.preventDefault();\n        const content = event.currentTarget.form.querySelector('textarea').value;\n\n        this.props.handleSave(event)(this.props.itemName, content);\n    }\n\n    render() {\n        const { handleClose, open } = this.props;\n        const textAreaStyle = {\n            width: '100%',\n            minHeight: '300px'\n        };\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\n\n        return (\n            <div>\n              <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-edit\">Editing file </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText>\n                      {this.state.loading ? 'Loading...' : textArea}\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Close\n                    </Button>\n                    <Button color=\"primary\" onClick={this.handleSave.bind(this)} type=\"submit\">\n                      Update\n                    </Button>\n                  </DialogActions>\n                </form>\n              </Dialog>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogEdit,\n        itemName: state.selectedItems.length ? state.selectedItems[0].name : '',\n        blobUrl: state.fileContentBlobUrl\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setVisibleDialogEdit(false));\n        },\n        handleOpen: (event) => {\n            dispatch(setVisibleDialogEdit(true));\n        },\n        handleSave: (event) => (itemName, content) => {\n            dispatch(updateTextFile(itemName, content));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleSave, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Create folder</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFolder\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFolder(false));\n        },\n        handleSave: event => {\n            event.preventDefault();\n            const folderName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createNewFolder(folderName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { createFile, setVisibleDialogCreateFile } from '../../../Actions/Actions.js';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleCreate, value, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-file\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-file\">Create file</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"File name\" type=\"text\" value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={handleCreate}>\n                      Create\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogCreateFile\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogCreateFile(false));\n        },\n        handleCreate: event => {\n            event.preventDefault();\n            const fileName = event.currentTarget.form.querySelector('input').value;\n            dispatch(createFile(fileName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { renameFile, renameFolder, setVisibleDialogRename } from '../../../Actions/Actions.js';\nimport { FolderItem } from '../../../Api/Item.js';\n\nclass FormDialog extends Component {\n\n    state = {\n        value: ''\n    };\n\n    componentWillReceiveProps (props) {\n        if (props.item !== null)\n            this.setState({value: props.item.name});\n    }\n\n    handleChange (event) {\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\n    }\n\n    handleSave (event) {\n        this.props.handleSave(event)(this.props.item, this.state.value);\n    }\n\n    render() {\n        const { value } = this.state;\n        const { handleClose, open } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\n                  <DialogContent>\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                      Cancel\n                    </Button>\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\n                      Save\n                    </Button>\n                  </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogRename,\n        item: state.selectedItems.length ? state.selectedItems[0] : null,\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: event => {\n            dispatch(setVisibleDialogRename(false));\n        },\n        handleSave: event => (item, newName) => {\n            event.preventDefault();\n            if (item instanceof FolderItem)\n                dispatch(renameFolder(item.name, newName));\n            else\n                dispatch(renameFile(item.name, newName));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n    setSelectedFolderSublist, enterToDirectorySublist \n} from '../../../Actions/Actions.js';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport blue from '@material-ui/core/colors/blue';\nimport '../File.css';\nimport { FileItem } from '../../../Api/Item.js';\n\nconst styles = theme => ({\n});\n\n\nclass FileSublist extends Component {\n    render() {\n        const { item, handleClick, isSelected, handleDoubleClick } = this.props;\n        const avatarStyle = {\n            backgroundColor: isSelected ? blue['A200'] : null\n        };\n        return (\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar style={avatarStyle}>\n                            { (item instanceof FileItem) ? <FileIcon /> : <FolderIcon />}\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.name} secondary=\"\" />\n                </ListItem>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.equals(ownProps.item))\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleDoubleClick: (event) => {\n            dispatch(enterToDirectorySublist(ownProps.item.name));\n            dispatch(setSelectedFolderSublist(null));\n        },\n\n        /**\n         * @param {Object} event\n         * @returns {undefined}\n         */\n        handleClick: (event) => {\n            event.stopPropagation();\n            dispatch(setSelectedFolderSublist(ownProps.item));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \nimport Loader from '../../Loader/Loader.jsx'; \nimport FileListEmptyMessage from '../FileListEmptyMessage';\nimport './FileListSublist.css'; \nimport { FolderItem } from '../../../Api/Item.js';\n\nclass FileListSublist extends Component {\n    render() {\n        const { itemList, loadingSublist } = this.props;\n        \n        const itemComponents = itemList.map((item, key) => {\n            return <FileSublist item={item} key={key} />\n        });\n\n        return <div className=\"FileListSublist\">\n            { loadingSublist ? \n                <Loader /> : \n                itemComponents.length ? itemComponents : <FileListEmptyMessage />\n            }\n        </div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const itemList = state.itemListSublist\n        .filter(item => item instanceof FolderItem)\n        .filter(item => state.path.join('').trim() === state.pathSublist.join('').trim() ? \n            !state.selectedItems.some(selectedItem => selectedItem.equals(item)) : true\n        );\n\n    return {\n        itemList,\n        loadingSublist: state.loadingSublist,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            selectedItems, canGoBack, canMove, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-move\">\n                        Move items to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedItems)} disabled={!canMove} type=\"submit\">\n                            Move\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent moving to same folder\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogMove,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        selectedItems: state.selectedItems,\n        pathSublist: state.pathSublist,\n        canGoBack: state.pathSublist.length,\n        canMove: state.selectedFolderSublist && canMove\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogMove(false));\n        },\n        handleSave: (event, selectedItems) => {\n            dispatch(moveItems(selectedItems));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { \n            selectedPath, handleClose, handleSave, open, \n            canGoBack, canCopy, selectedItems, handleGoBack \n        } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-copy\">\n                        Copy files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileListSublist />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\n                            <KeyboardArrowLeftIcon /> Go back directory\n                        </Button>\n\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedItems)} disabled={!canCopy} type=\"submit\">\n                            Copy\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // prevent copying to same folder\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\n\n    return {\n        open: state.visibleDialogCopy,\n        selectedFolderSublist: state.selectedFolderSublist,\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\n        canGoBack: state.pathSublist.length,\n        canCopy: state.selectedFolderSublist && canCopy,\n        selectedItems: state.selectedItems\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(setVisibleDialogCopy(false));\n        },\n        handleSave: (event, selectedItems) => {\n            dispatch(copyItems(selectedItems));\n        },\n        handleGoBack: (event) => {\n            dispatch(setSelectedFolderSublist(null));\n            dispatch(enterToPreviousDirectorySublist());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\nimport { getHumanFileSize } from '../../Api/Item';\n\nfunction UploadFileList(props) {\n    const { files } = props;\n    const list = files.map((f, i) =>\n        <ListItem dense key={i}>\n            <ListItemIcon>\n                <FileIcon />\n            </ListItemIcon>\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\n        </ListItem>\n    );\n\n    return (\n        <div>\n            <List component=\"nav\">\n                {list}\n            </List>\n        </div>\n    );\n}\n\nUploadFileList.propTypes = {\n    files: PropTypes.array.isRequired\n};\n\nexport default UploadFileList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport UploadFileList from './UploadFileList';\n\nclass FileUploader extends Component {\n\n    handleReset(event) {\n        this.refs.inputfile.value = '';\n        this.props.handleReset(event);\n    }\n\n    render() {\n        const { fileUploadList, handleSelectedFiles } = this.props;\n        const styles = {\n            inputfile: {\n                // TODO: Change this to display none as soon, as the label button works\n                // display: 'none'\n            }, inputreset: {\n                display: fileUploadList.length ? 'inline-flex' : 'none'\n            }\n        }\n\n        return (\n            <div>\n                <label htmlFor=\"button-file\">\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\n                    {/*<Button component=\"span\" variant=\"contained\" color=\"primary\">\n                        Select Files\n                    </Button>*/}\n                </label>\n\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\n                    Clear\n                </Button>\n\n                <UploadFileList files={fileUploadList} />\n            </div>\n        );\n    }\n}\n\nFileUploader.propTypes = {\n    fileUploadList: PropTypes.array.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleSelectedFiles: PropTypes.func.isRequired,\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\n\nclass FormDialog extends Component {\n\n    render() {\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\n\n        return (\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\n                <form>\n                    <DialogTitle id=\"form-dialog-upload\">\n                        Upload files\n                    </DialogTitle>\n                    <DialogContent>\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\n                            Cancel\n                        </Button>\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\n                            Upload\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        open: state.visibleDialogUploadFile,\n        canUpload: state.fileUploadList.length,\n        fileUploadList: state.fileUploadList,\n        fileUploadProgress: state.fileUploadProgress\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch(resetFileUploader());\n        },\n        handleUpload: (event) => {\n            event.preventDefault();\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\n            dispatch(uploadFiles(files));\n        },\n        handleSelectedFiles: (event) => {\n            dispatch(setFileUploadList(\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\n            ));\n        },\n        handleReset: (event) => {\n            dispatch(setFileUploadList([]));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\n","import React from 'react';\nimport DialogSolidLogin from './SolidLogin/SolidLogin.jsx';\nimport DialogSolidLogout from './SolidLogout/SolidLogout.jsx';\nimport DialogContent from './Content/Content.jsx';\nimport DialogMedia from './Media/Media.jsx';\nimport DialogEdit from './Edit/Edit.jsx';\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\nimport DialogCreateFile from './CreateFile/CreateFile.jsx';\nimport DialogRename from './Rename/Rename.jsx';\nimport DialogMove from './Move/Move.jsx';\nimport DialogCopy from './Copy/Copy.jsx';\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\n\nfunction Dialogs(props) {\n    return (\n        <div className=\"Dialogs\">\n            <DialogSolidLogin />\n            <DialogSolidLogout />\n            <DialogContent />\n            <DialogMedia />\n            <DialogEdit />\n            <DialogCreateFolder />\n            <DialogCreateFile />\n            <DialogMove />\n            <DialogCopy />\n            <DialogRename />\n            <DialogUploadFile />\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n});\n\nclass DynamicSnackbar extends React.Component {\n  render() {\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={open}\n          autoHideDuration={notificationDuration}\n          onClose={handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{errorMsg}</span>}\n          action={[\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nDynamicSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        open: !!state.errorMsg,\n        errorMsg: state.errorMsg,\n        notificationDuration: state.notificationDuration || 60000\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClose: (event) => {\n            dispatch({\n                type: 'SET_ERROR_MSG',\n                value: null\n            });\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\n\n","import React, { Component } from 'react';\nimport FileList from './Components/FileList/FileList.jsx';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\n\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport { connect } from 'react-redux';\nimport { setContextMenuVisible, setVisibleDialogSolidLogin, initBrowserHistory } from './Actions/Actions.js';\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    },\n    typography: {\n        useNextVariants: true,\n    }\n});\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.init();\n    };\n\n    render() {\n        return (\n            <MaterialUI theme={theme}>\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\n                    <Navbar />\n                    <FileList />\n                    <ContextMenu />\n                    <DynamicSnackbar />\n                    <Dialogs />\n                </div>\n            </MaterialUI>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        init: () => {\n\t\t\tdispatch(initBrowserHistory());\n            dispatch(setVisibleDialogSolidLogin(true));\n        },\n\n        handleHideContextMenu: (event) => {\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\n                event.preventDefault();\n            }\n            dispatch(setContextMenuVisible(false));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport MainReducer from './Reducers/MainReducer'\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(MainReducer, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}